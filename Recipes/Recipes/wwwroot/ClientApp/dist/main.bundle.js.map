{"version":3,"sources":["./ClientApp/$_lazy_route_resource lazy","./ClientApp/app/app.component.html","./ClientApp/app/app.component.ts","./ClientApp/app/app.module.ts","./ClientApp/app/recipe/addRecipeCuisine.component.html","./ClientApp/app/recipe/addRecipeCuisine.component.ts","./ClientApp/app/recipe/createRecipe.component.html","./ClientApp/app/recipe/createRecipe.component.ts","./ClientApp/app/shared/dataService.ts","./ClientApp/app/shared/recipe.ts","./ClientApp/environments/environment.ts","./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/$$_lazy_route_resource lazy\n// module id = ./ClientApp/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n    <title>app.component</title>\\r\\n</head>\\r\\n<body>\\r\\n    <create-recipe></create-recipe>\\r\\n</body>\\r\\n</html>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/app.component.html\n// module id = ./ClientApp/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { CreateRecipe } from './recipe/createRecipe.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styles: []\r\n})\r\nexport class AppComponent {\r\n  title = 'Recipes';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CreateRecipe } from './recipe/createRecipe.component';\r\nimport { AddRecipeCuisine } from './recipe/addRecipeCuisine.component';\r\nimport { DataService } from './shared/dataService';\r\n\r\nlet routes = [\r\n    //{ path: \"\", component: Results },\r\n    //{ path: \"recipe\", component: Recipe }\r\n    //{ path: \"\", component: Recipe }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n      AppComponent,\r\n      CreateRecipe,\r\n      AddRecipeCuisine\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      RouterModule.forRoot(routes, {\r\n          useHash: true,\r\n          enableTracing: false // for Debugging of the Routes\r\n      })\r\n  ],\r\n  providers: [\r\n      DataService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.module.ts","module.exports = \"<h6>Cuisine:</h6>\\r\\n\\r\\n<div class=\\\"input-group mb-3\\\" *ngFor=\\\"let r of data.recipe.cuisine\\\">\\r\\n    <input type=\\\"text\\\" readonly class=\\\"form-control\\\" id=\\\"recipeCuisines\\\" value=\\\"{{ r.cuisineId }} - {{ r.cuisineName }}\\\" />\\r\\n    <div class=\\\"input-group-append\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\">Remove Cuisine</button>\\r\\n        <!--TODO - Not functioning\\r\\n        <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"removeCuisine(r)\\\">Remove Cuisine</button>-->\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"input-group\\\">\\r\\n    <select class=\\\"custom-select\\\" [(ngModel)]=\\\"recipeCuisineInput\\\" placeholder=\\\"Choose...\\\">\\r\\n        <option *ngFor=\\\"let cu of cuisines\\\" [ngValue]=\\\"cu\\\">{{ cu.cuisineName }}</option>\\r\\n    </select>\\r\\n    <div class=\\\"input-group-append\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"addCuisine(recipeCuisineInput)\\\">Add Cuisine</button>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/recipe/addRecipeCuisine.component.html\n// module id = ./ClientApp/app/recipe/addRecipeCuisine.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../shared/dataService';\r\nimport { Cuisine } from '../shared/cuisine';\r\n\r\n@Component({\r\n    selector: 'recipe-cuisine',\r\n    templateUrl: 'addRecipeCuisine.component.html',\r\n    styleUrls: []\r\n})\r\n\r\nexport class AddRecipeCuisine implements OnInit {\r\n\r\n    constructor(private data: DataService) { }\r\n\r\n    public cuisines: Cuisine[];\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadCuisines()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.cuisines = this.data.cuisines;\r\n                }\r\n            })\r\n    }\r\n\r\n    addCuisine(cuisine: Cuisine) {\r\n        this.data.AddToRecipe(cuisine);\r\n    }\r\n\r\n    //TODO - Not functioning\r\n    //    removeCuisine(cuisine: Cuisine) {\r\n    //    this.data.RemoveFromRecipe(cuisine);\r\n    //}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/recipe/addRecipeCuisine.component.ts","module.exports = \"<h1>Recipe Creation</h1>\\r\\n\\r\\n<div id=\\\"recipe-info\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\" id=\\\"headingInfo\\\">\\r\\n            <h5 class=\\\"mb-0\\\">\\r\\n                <button class=\\\"btn btn-block btn-dark\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseInfo\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseInfo\\\" style=\\\"white-space: normal\\\">\\r\\n                    General Info:\\r\\n                </button>\\r\\n            </h5>\\r\\n        </div>\\r\\n\\r\\n        <div id=\\\"collapseInfo\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"collapseInfo\\\" data-parent=\\\"#recipe-info\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form id=\\\"basicInfo\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeImageInput\\\">Recipe Image</label>\\r\\n                                <input type=\\\"file\\\" class=\\\"form-control-file\\\" id=\\\"recipeImageInput\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeTitleInput\\\">Recipe Title</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"recipeTitleInput\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <form id=\\\"generalInfo\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipePortionInput\\\">Number of portions</label>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"recipePortionInput\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeSkillInput\\\">Skill</label>\\r\\n                                <select id=\\\"recipeSkillInput\\\" class=\\\"form-control\\\">\\r\\n                                    <option selected>Choose...</option>\\r\\n                                    <option *ngFor=\\\"let s of skills\\\">{{ s.skill }}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipePrepTimeInput\\\">Prep time</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"recipePrepTimeInput\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeCategoryInput\\\">Category</label>\\r\\n                                <select id=\\\"recipeCategoryInput\\\" class=\\\"form-control\\\">\\r\\n                                    <option selected>Choose...</option>\\r\\n                                    <option *ngFor=\\\"let ca of categories\\\">{{ ca.categoryName }}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeCookTimeInput\\\">Cook time</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"recipeCookTimeInput\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeCourseInput\\\">Course</label>\\r\\n                                <select id=\\\"recipeCourseInput\\\" class=\\\"form-control\\\">\\r\\n                                    <option selected>Choose...</option>\\r\\n                                    <option *ngFor=\\\"let co of courses\\\">{{ co.courseName }}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeRatingInput\\\">Rating</label>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"recipeRatingInput\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <recipe-cuisine></recipe-cuisine>\\r\\n                            <!--<div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeCuisineInput\\\">Cuisine</label>\\r\\n                                <select id=\\\"recipeCusineInput\\\" class=\\\"form-control\\\" placeholder=\\\"Choose...\\\">\\r\\n                                    <option selected>Choose...</option>\\r\\n                                    <option *ngFor=\\\"let cu of cuisines\\\">{{ cu.cuisineName }}</option>\\r\\n                                </select>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"addCuisine(cu)\\\">Add Cuisine</button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Remove Cuisine</button>\\r\\n                            </div>-->\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeTagInput\\\">Tag</label>\\r\\n                                <select id=\\\"recipeTagInput\\\" class=\\\"form-control\\\">\\r\\n                                    <option selected>Choose...</option>\\r\\n                                    <option *ngFor=\\\"let t of tags\\\">{{ t.tag }}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Add Tag</button>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Remove Tag</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"recipe-nutrition\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\" id=\\\"headingNutrition\\\">\\r\\n            <h5 class=\\\"mb-0\\\">\\r\\n                <button class=\\\"btn btn-block btn-dark\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseNutrition\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseNutrition\\\" style=\\\"white-space: normal\\\">\\r\\n                    Nutritional Info (per portion):\\r\\n                </button>\\r\\n            </h5>\\r\\n        </div>\\r\\n\\r\\n        <div id=\\\"collapseNutrition\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"collapseNutrition\\\" data-parent=\\\"#recipe-nutrition\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeCalorieInput\\\">Calories (kcal)</label>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"recipeCalorieInput\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeProteinInput\\\">Protein (g)</label>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"recipeProteinInput\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeCarbohydrateInput\\\">Carbohydrates (g)</label>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"recipeCarbohydrateInput\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeFatInput\\\">Fat (g)</label>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"recipeFatInput\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeSaturatedFatInput\\\">Saturated Fat (g)</label>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"recipeSaturatedFatInput\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeFibreInput\\\">Fibre (g)</label>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"recipeFibreInput\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeSugarInput\\\">Sugar (g)</label>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"recipeSugarInput\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeSaltInput\\\">Salt (g)</label>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"recipeSaltInput\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"recipe-ingredients\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\" id=\\\"headingIngredients\\\">\\r\\n            <h5 class=\\\"mb-0\\\">\\r\\n                <button class=\\\"btn btn-block btn-dark\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseIngredients\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseIngredients\\\" style=\\\"white-space: normal\\\">\\r\\n                    Ingredients:\\r\\n                </button>\\r\\n            </h5>\\r\\n        </div>\\r\\n\\r\\n        <div id=\\\"collapseIngredients\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"collapseIngredients\\\" data-parent=\\\"#recipe-ingredients\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form id=\\\"ingredientInfo\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-2\\\">\\r\\n                            <label for=\\\"recipeIngredientQuantityInput\\\">Quantity</label>\\r\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"recipeIngredientQuantityInput\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-2\\\">\\r\\n                            <label for=\\\"recipeIngredientMeasurementInput\\\">Measurement</label>\\r\\n                            <select id=\\\"recipeIngredientMeasurementInput\\\" class=\\\"form-control\\\">\\r\\n                                <option selected>Choose...</option>\\r\\n                                <option *ngFor=\\\"let m of ingredientMeasurements\\\">{{ m.ingredientMeasurement }}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-6\\\">\\r\\n                            <label for=\\\"recipeIngredientInput\\\">Ingredient</label>\\r\\n                            <select id=\\\"recipeIngredientInput\\\" class=\\\"form-control\\\">\\r\\n                                <option selected>Choose...</option>\\r\\n                                <option *ngFor=\\\"let i of ingredients\\\">{{ i.ingredientName }}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-2\\\">\\r\\n                            <label for=\\\"recipeIngredientPreparationInput\\\">Preparation</label>\\r\\n                            <select id=\\\"recipeIngredientPreparationInput\\\" class=\\\"form-control\\\">\\r\\n                                <option selected>Choose...</option>\\r\\n                                <option *ngFor=\\\"let p of ingredientPreparations\\\">{{ p.ingredientPreparation }}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Add Ingredient</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Remove Ingredient</button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"recipe-method\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\" id=\\\"headingMethod\\\">\\r\\n            <h5 class=\\\"mb-0\\\">\\r\\n                <button class=\\\"btn btn-block btn-dark\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseMethod\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseMethod\\\" style=\\\"white-space: normal\\\">\\r\\n                    Method:\\r\\n                </button>\\r\\n            </h5>\\r\\n        </div>\\r\\n\\r\\n        <div id=\\\"collapseMethod\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"collapseMethod\\\" data-parent=\\\"#recipe-method\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form id=\\\"methodInfo\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"recipeMethodInput\\\">Method</label>\\r\\n                        <textarea class=\\\"form-control\\\" id=\\\"recipeMethodInput\\\" rows=\\\"3\\\"></textarea>\\r\\n                    </div>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Add Method</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Remove Method</button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"recipe-notes\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\" id=\\\"headingNotes\\\">\\r\\n            <h5 class=\\\"mb-0\\\">\\r\\n                <button class=\\\"btn btn-block btn-dark\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseNotes\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseNotes\\\" style=\\\"white-space: normal\\\">\\r\\n                    Notes:\\r\\n                </button>\\r\\n            </h5>\\r\\n        </div>\\r\\n\\r\\n        <div id=\\\"collapseNotes\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"collapseNotes\\\" data-parent=\\\"#recipe-notes\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form id=\\\"noteInfo\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"recipeNoteInput\\\">Note</label>\\r\\n                        <textarea class=\\\"form-control\\\" id=\\\"recipeNoteInput\\\" rows=\\\"3\\\"></textarea>\\r\\n                    </div>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Add Note</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Remove Note</button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Create Recipe</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/recipe/createRecipe.component.html\n// module id = ./ClientApp/app/recipe/createRecipe.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../shared/dataService';\r\nimport { Category } from '../shared/category';\r\nimport { Course } from '../shared/course';\r\nimport { Ingredient } from '../shared/ingredient';\r\nimport { IngredientMeasurement } from '../shared/ingredientmeasurement';\r\nimport { IngredientPreparation } from '../shared/ingredientpreparation';\r\nimport { Skill } from '../shared/skill';\r\nimport { Tag } from '../shared/tag';\r\nimport { AddRecipeCuisine } from '../recipe/addRecipeCuisine.component';\r\n\r\n@Component({\r\n    selector: 'create-recipe',\r\n    templateUrl: 'createRecipe.component.html',\r\n    styleUrls: []\r\n})\r\n\r\nexport class CreateRecipe implements OnInit {\r\n\r\n    constructor(private data: DataService) { }\r\n\r\n    public categories: Category[];\r\n\r\n    public courses: Course[];\r\n\r\n    public ingredients: Ingredient[];\r\n\r\n    public ingredientMeasurements: IngredientMeasurement[];\r\n\r\n    public ingredientPreparations: IngredientPreparation[];\r\n\r\n    public skills: Skill[];\r\n\r\n    public tags: Tag[];\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadCategories()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.categories = this.data.categories;\r\n                }\r\n            })\r\n\r\n        this.data.loadCourses()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.courses = this.data.courses;\r\n                }\r\n            })\r\n\r\n        this.data.loadIngredients()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.ingredients = this.data.ingredients;\r\n                }\r\n            })\r\n\r\n        this.data.loadIngredientMeasurements()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.ingredientMeasurements = this.data.ingredientMeasurements;\r\n                }\r\n            })\r\n\r\n        this.data.loadIngredientPreparations()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.ingredientPreparations = this.data.ingredientPreparations;\r\n                }\r\n            })\r\n\r\n        this.data.loadSkills()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.skills = this.data.skills;\r\n                }\r\n            })\r\n\r\n        this.data.loadTags()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.tags = this.data.tags;\r\n                }\r\n            })\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/recipe/createRecipe.component.ts","import { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Category } from '../shared/category';\r\nimport { Course } from '../shared/course';\r\nimport { Cuisine } from '../shared/cuisine';\r\nimport { Ingredient } from '../shared/ingredient';\r\nimport { IngredientMeasurement } from '../shared/ingredientmeasurement';\r\nimport { IngredientPreparation } from '../shared/ingredientpreparation';\r\nimport { Skill } from '../shared/skill';\r\nimport { Tag } from '../shared/tag';\r\nimport { Recipe, RecipeCuisine } from '../shared/recipe';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public categories: Category[] = [];\r\n\r\n    public courses: Course[] = [];\r\n\r\n    public cuisines: Cuisine[] = [];\r\n\r\n    public ingredients: Ingredient[] = [];\r\n\r\n    public ingredientMeasurements: IngredientMeasurement[] = [];\r\n\r\n    public ingredientPreparations: IngredientPreparation[] = [];\r\n\r\n    public skills: Skill[] = [];\r\n\r\n    public tags: Tag[] = [];\r\n\r\n    public recipe: Recipe = new Recipe();\r\n\r\n    public loadCategories(): Observable<boolean> {\r\n        return this.http.get('/api/category')\r\n            .map((data: any[]) => {\r\n                this.categories = data;\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public loadCourses(): Observable<boolean> {\r\n        return this.http.get('/api/course')\r\n            .map((data: any[]) => {\r\n                this.courses = data;\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public loadCuisines(): Observable<boolean> {\r\n        return this.http.get('/api/cuisine')\r\n            .map((data: any[]) => {\r\n                this.cuisines = data;\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public loadIngredients(): Observable<boolean> {\r\n        return this.http.get('/api/ingredient')\r\n            .map((data: any[]) => {\r\n                this.ingredients = data;\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public loadIngredientMeasurements(): Observable<boolean> {\r\n        return this.http.get('/api/ingredientMeasurement')\r\n            .map((data: any[]) => {\r\n                this.ingredientMeasurements = data;\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public loadIngredientPreparations(): Observable<boolean> {\r\n        return this.http.get('/api/ingredientPreparation')\r\n            .map((data: any[]) => {\r\n                this.ingredientPreparations = data;\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public loadSkills(): Observable<boolean> {\r\n        return this.http.get('/api/skill')\r\n            .map((data: any[]) => {\r\n                this.skills = data;\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public loadTags(): Observable<boolean> {\r\n        return this.http.get('/api/tag')\r\n            .map((data: any[]) => {\r\n                this.tags = data;\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public AddToRecipe(cuisine: Cuisine) {\r\n\r\n        let rcuisine: RecipeCuisine;\r\n\r\n        rcuisine = new RecipeCuisine();\r\n        rcuisine.cuisineId = cuisine.cuisineId;\r\n        rcuisine.cuisineName = cuisine.cuisineName;\r\n\r\n        this.recipe.cuisine.push(rcuisine);\r\n    }\r\n\r\n    //TODO - Not functioning\r\n    //public RemoveFromRecipe(cuisine) {\r\n    //    const index: number = this.recipe.cuisine.findIndex(cuisine);\r\n\r\n    //    this.recipe.cuisine.splice(index, 1);\r\n    //}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/shared/dataService.ts","export class Recipe {\r\n    recipeId: number;\r\n    recipeName: string;\r\n    recipeImage: string;\r\n    portions: number;\r\n    rating: number;\r\n    prepTime: string;\r\n    cookTime: string;\r\n    calories: number;\r\n    fat: number;\r\n    saturated: number;\r\n    carbohydrates: number;\r\n    sugars: number;\r\n    fibre: number;\r\n    protein: number;\r\n    salt: number;\r\n    ingredients: Array<RecipeIngredient> = new Array<RecipeIngredient>();\r\n    methods: Array<RecipeMethod> = new Array <RecipeMethod>();\r\n    notes: Array<RecipeNote> = new Array <RecipeNote>();\r\n    cuisine: Array<RecipeCuisine> = new Array<RecipeCuisine>();\r\n    tags: Array<RecipeTag> = new Array<RecipeTag>();\r\n    skillId: number;\r\n    skillSkillLevel: string;\r\n    courseId: number;\r\n    courseName: string;\r\n    categoryId: number;\r\n    categoryName: string;\r\n}\r\n\r\nexport class RecipeIngredient {\r\n    id: number;\r\n    quantity: number;\r\n    ingredientId: number;\r\n    ingredientName: string;\r\n    measurementId: number;\r\n    measurementMeasurement: string;\r\n    preparationId: number;\r\n    preparationPreparation: string;\r\n}\r\n\r\nexport class RecipeMethod {\r\n    id: number;\r\n    stepNumber: number;\r\n    method: string;\r\n}\r\n\r\nexport class RecipeNote {\r\n    id: number;\r\n    note: string;\r\n}\r\n\r\nexport class RecipeCuisine {\r\n    id: number;\r\n    cuisineId: number;\r\n    cuisineName: string;\r\n}\r\n\r\nexport class RecipeTag {\r\n    id: number;\r\n    tagId: number;\r\n    tagName: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/shared/recipe.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/main.ts"],"sourceRoot":"webpack:///"}