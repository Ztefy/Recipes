{"version":3,"sources":["./ClientApp/$_lazy_route_resource lazy","./ClientApp/app/app.component.html","./ClientApp/app/app.component.ts","./ClientApp/app/app.module.ts","./ClientApp/app/basic_recipe/createBasicRecipe.component.html","./ClientApp/app/basic_recipe/createBasicRecipe.component.ts","./ClientApp/app/recipe/addRecipeCuisine.component.html","./ClientApp/app/recipe/addRecipeCuisine.component.ts","./ClientApp/app/recipe/addRecipeIngredient.component.html","./ClientApp/app/recipe/addRecipeIngredient.component.ts","./ClientApp/app/recipe/addRecipeMethod.component.html","./ClientApp/app/recipe/addRecipeMethod.component.ts","./ClientApp/app/recipe/addRecipeNote.component.html","./ClientApp/app/recipe/addRecipeNote.component.ts","./ClientApp/app/recipe/addRecipeTag.component.html","./ClientApp/app/recipe/addRecipeTag.component.ts","./ClientApp/app/recipe/createRecipe.component.html","./ClientApp/app/recipe/createRecipe.component.ts","./ClientApp/app/shared/dataService.ts","./ClientApp/app/shared/recipe.ts","./ClientApp/environments/environment.ts","./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/$$_lazy_route_resource lazy\n// module id = ./ClientApp/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n    <title>app.component</title>\\r\\n</head>\\r\\n<body>\\r\\n    <create-basic-recipe></create-basic-recipe>\\r\\n</body>\\r\\n</html>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/app.component.html\n// module id = ./ClientApp/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { CreateRecipe } from './recipe/createRecipe.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styles: []\r\n})\r\nexport class AppComponent {\r\n  title = 'Recipes';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { DataService } from './shared/dataService';\r\n\r\nimport { CreateRecipe } from './recipe/createRecipe.component';\r\nimport { AddRecipeCuisine } from './recipe/addRecipeCuisine.component';\r\nimport { AddRecipeTag } from './recipe/addRecipeTag.component';\r\nimport { AddRecipeNote } from './recipe/addRecipeNote.component';\r\nimport { AddRecipeMethod } from './recipe/addRecipeMethod.component';\r\nimport { AddRecipeIngredient } from './recipe/addRecipeIngredient.component';\r\n\r\nimport { CreateBasicRecipe } from './basic_recipe/createBasicRecipe.component';\r\n\r\nlet routes = [\r\n    //{ path: \"\", component: Results },\r\n    //{ path: \"recipe\", component: Recipe }\r\n    //{ path: \"\", component: Recipe }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n      AppComponent,\r\n      CreateRecipe,\r\n      AddRecipeCuisine,\r\n      AddRecipeTag,\r\n      AddRecipeNote,\r\n      AddRecipeMethod,\r\n      AddRecipeIngredient,\r\n      CreateBasicRecipe\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      RouterModule.forRoot(routes, {\r\n          useHash: true,\r\n          enableTracing: false // for Debugging of the Routes\r\n      })\r\n  ],\r\n  providers: [\r\n      DataService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.module.ts","module.exports = \"<h1>Basic Recipe Creation</h1>\\r\\n\\r\\n<div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\"> {{ errorMessage }}</div>\\r\\n<div id=\\\"recipe-info\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\" id=\\\"headingInfo\\\">\\r\\n            <h5 class=\\\"mb-0\\\">\\r\\n                <button class=\\\"btn btn-block btn-dark\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseInfo\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseInfo\\\" style=\\\"white-space: normal\\\">\\r\\n                    General Info:\\r\\n                </button>\\r\\n            </h5>\\r\\n        </div>\\r\\n\\r\\n        <div id=\\\"collapseInfo\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"collapseInfo\\\" data-parent=\\\"#recipe-info\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form id=\\\"basicInfo\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeImageInput\\\">Recipe Image</label>\\r\\n                                <input type=\\\"file\\\" class=\\\"form-control-file\\\" name=\\\"recipeImageInput\\\" [(ngModel)]=\\\"recipeImageInput\\\" #image=\\\"ngModel\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeTitleInput\\\">Recipe Title</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"recipeTitleInput\\\" required minlength=\\\"4\\\" [(ngModel)]=\\\"recipeTitleInput\\\" #title=\\\"ngModel\\\" />\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                <div *ngIf=\\\"title.errors.required\\\">\\r\\n                                    Title is required.\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"title.errors.minlength\\\">\\r\\n                                    Title must be at least 4 characters long.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n                <form id=\\\"generalInfo\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipePortionInput\\\">Number of portions</label>\\r\\n                                <input type=\\\"number\\\" min=\\\"1\\\" class=\\\"form-control\\\" name=\\\"recipePortionInput\\\" required [(ngModel)]=\\\"recipePortionInput\\\" #portion=\\\"ngModel\\\" />\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"portion.invalid && (portion.dirty || portion.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                Portion is required.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeSkillInput\\\">Skill</label>\\r\\n                                <select name=\\\"recipeSkillInput\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"recipeSkillInput\\\" #skill=\\\"ngModel\\\" placeholder=\\\"Choose...\\\">\\r\\n                                    <option *ngFor=\\\"let s of skills\\\">{{ s.skill }}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"!skill.dirty\\\" class=\\\"alert alert-danger\\\">\\r\\n                                A skill level needs to be chosen.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipePrepTimeInput\\\">Prep time</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"recipePrepTimeInput\\\" minlength=\\\"3\\\" [(ngModel)]=\\\"recipePrepTimeInput\\\" #preptime=\\\"ngModel\\\" />\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"preptime.invalid && (preptime.dirty || preptime.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                <div *ngIf=\\\"preptime.errors.minlength\\\">\\r\\n                                    Prep time must be at least 3 characters long.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeCategoryInput\\\">Category</label>\\r\\n                                <select name=\\\"recipeCategoryInput\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"recipeCategoryInput\\\" #category=\\\"ngModel\\\" placeholder=\\\"Choose...\\\">\\r\\n                                    <option *ngFor=\\\"let ca of categories\\\">{{ ca.categoryName }}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"!category.dirty\\\" class=\\\"alert alert-danger\\\">\\r\\n                                A category needs to be chosen.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeCookTimeInput\\\">Cook time</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"recipeCookTimeInput\\\" minlength=\\\"3\\\" [(ngModel)]=\\\"recipeCookTimeInput\\\" #cooktime=\\\"ngModel\\\" />\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"cooktime.invalid && (cooktime.dirty || cooktime.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                <div *ngIf=\\\"cooktime.errors.minlength\\\">\\r\\n                                    Cook time must be at least 3 characters long.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeCourseInput\\\">Course</label>\\r\\n                                <select name=\\\"recipeCourseInput\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"recipeCourseInput\\\" #course=\\\"ngModel\\\" placeholder=\\\"Choose...\\\">\\r\\n                                    <option *ngFor=\\\"let co of courses\\\">{{ co.courseName }}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"!course.dirty\\\" class=\\\"alert alert-danger\\\">\\r\\n                                A course needs to be chosen.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeRatingInput\\\">Rating</label>\\r\\n                                <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"5\\\" class=\\\"form-control\\\" name=\\\"recipeRatingInput\\\" [(ngModel)]=\\\"recipeRatingInput\\\" #rating=\\\"ngModel\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeLocationInput\\\">Location</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"recipeLocationInput\\\" minlength=\\\"3\\\" [(ngModel)]=\\\"recipeLocationInput\\\" #location=\\\"ngModel\\\" />\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"location.invalid && (location.dirty || location.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                <div *ngIf=\\\"location.errors.minlength\\\">\\r\\n                                    Location must be at least 3 characters long.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"recipe-nutrition\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\" id=\\\"headingNutrition\\\">\\r\\n            <h5 class=\\\"mb-0\\\">\\r\\n                <button class=\\\"btn btn-block btn-dark\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseNutrition\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseNutrition\\\" style=\\\"white-space: normal\\\">\\r\\n                    Nutritional Info (per portion):\\r\\n                </button>\\r\\n            </h5>\\r\\n        </div>\\r\\n\\r\\n        <div id=\\\"collapseNutrition\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"collapseNutrition\\\" data-parent=\\\"#recipe-nutrition\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form id=\\\"nutritionalInfo\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeCalorieInput\\\">Calories (kcal)</label>\\r\\n                                <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"recipeCalorieInput\\\" [(ngModel)]=\\\"recipeCalorieInput\\\" #calorie=\\\"ngModel\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeProteinInput\\\">Protein (g)</label>\\r\\n                                <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"recipeProteinInput\\\" [(ngModel)]=\\\"recipeProteinInput\\\" #protein=\\\"ngModel\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeCarbohydrateInput\\\">Carbohydrates (g)</label>\\r\\n                                <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"recipeCarbohydrateInput\\\" [(ngModel)]=\\\"recipeCarbohydrateInput\\\" #carb=\\\"ngModel\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeFatInput\\\">Fat (g)</label>\\r\\n                                <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"recipeFatInput\\\" [(ngModel)]=\\\"recipeFatInput\\\" #fat=\\\"ngModel\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeSaturatedFatInput\\\">Saturated Fat (g)</label>\\r\\n                                <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"recipeSaturatedFatInput\\\" [(ngModel)]=\\\"recipeSaturatedFatInput\\\" #satfat=\\\"ngModel\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeFibreInput\\\">Fibre (g)</label>\\r\\n                                <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"recipeFibreInput\\\" [(ngModel)]=\\\"recipeFibreInput\\\" #fibre=\\\"ngModel\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeSugarInput\\\">Sugar (g)</label>\\r\\n                                <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"recipeSugarInput\\\" [(ngModel)]=\\\"recipeSugarInput\\\" #sugar=\\\"ngModel\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"recipeSaltInput\\\">Salt (g)</label>\\r\\n                                <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"recipeSaltInput\\\" [(ngModel)]=\\\"recipeSaltInput\\\" #salt=\\\"ngModel\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onCreateBasicRecipe(recipeImageInput, recipeTitleInput, recipePortionInput, recipeSkillInput, recipePrepTimeInput, recipeCategoryInput, recipeCookTimeInput, recipeCourseInput, recipeRatingInput, recipeCalorieInput, recipeProteinInput, recipeCarbohydrateInput, recipeFatInput, recipeSaturatedFatInput, recipeFibreInput, recipeSugarInput, recipeSaltInput, recipeLocationInput); recipeImageInput = Null; recipeTitleInput = Null; recipePortionInput = Null; recipeSkillInput = Null; recipePrepTimeInput = Null; recipeCategoryInput = Null; recipeCookTimeInput = Null; recipeCourseInput = Null; recipeRatingInput = Null; recipeCalorieInput = Null; recipeProteinInput = Null; recipeCarbohydrateInput = Null; recipeFatInput = Null; recipeSaturatedFatInput = Null; recipeFibreInput = Null; recipeSugarInput = Null; recipeSaltInput = Null; recipeLocationInput = Null\\\">Create Basic Recipe</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/basic_recipe/createBasicRecipe.component.html\n// module id = ./ClientApp/app/basic_recipe/createBasicRecipe.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../shared/dataService';\r\nimport { Category } from '../shared/category';\r\nimport { Course } from '../shared/course';\r\nimport { Skill } from '../shared/skill';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'create-basic-recipe',\r\n    templateUrl: 'createBasicRecipe.component.html',\r\n    styleUrls: []\r\n})\r\n\r\nexport class CreateBasicRecipe implements OnInit {\r\n\r\n    constructor(private data: DataService/*, public router: Router*/) { }\r\n\r\n    public categories: Category[];\r\n\r\n    public courses: Course[];\r\n\r\n    public skills: Skill[];\r\n\r\n    errorMessage: string = \"\";\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadCategories()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.categories = this.data.categories;\r\n                }\r\n            })\r\n\r\n        this.data.loadCourses()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.courses = this.data.courses;\r\n                }\r\n            })\r\n\r\n        this.data.loadSkills()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.skills = this.data.skills;\r\n                }\r\n            })\r\n    }\r\n\r\n    onCreateBasicRecipe(image, title, portion, skill, preptime, category, cooktime, course, rating, calorie, protein, carb, fat, satfat, fibre, sugar, salt, location) {\r\n\r\n        this.data.CreateBasicRecipe(image, title, portion, skill, preptime, category, cooktime, course, rating, calorie, protein, carb, fat, satfat, fibre, sugar, salt, location)\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    //TODO Routing\r\n                    //this.router.navigate(['/']);\r\n                }\r\n            }, err => this.errorMessage = \"Failed to save basic recipe\");\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/basic_recipe/createBasicRecipe.component.ts","module.exports = \"<h6>Cuisine:</h6>\\r\\n\\r\\n<div class=\\\"input-group mb-3\\\" *ngFor=\\\"let r of data.recipe.cuisine\\\">\\r\\n    <input type=\\\"text\\\" readonly class=\\\"form-control\\\" id=\\\"recipeCuisines\\\" value=\\\"{{ r.cuisineId }} - {{ r.cuisineName }}\\\" />\\r\\n    <div class=\\\"input-group-append\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"removeCuisine(r)\\\">Remove Cuisine</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"input-group\\\">\\r\\n    <select class=\\\"custom-select\\\" [(ngModel)]=\\\"recipeCuisineInput\\\" placeholder=\\\"Choose...\\\">\\r\\n        <option *ngFor=\\\"let cu of cuisines\\\" [ngValue]=\\\"cu\\\">{{ cu.cuisineName }}</option>\\r\\n    </select>\\r\\n    <div class=\\\"input-group-append\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"addCuisine(recipeCuisineInput);recipeCuisineInput = null\\\">Add Cuisine</button>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/recipe/addRecipeCuisine.component.html\n// module id = ./ClientApp/app/recipe/addRecipeCuisine.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../shared/dataService';\r\nimport { Cuisine } from '../shared/cuisine';\r\n\r\n@Component({\r\n    selector: 'recipe-cuisine',\r\n    templateUrl: 'addRecipeCuisine.component.html',\r\n    styleUrls: []\r\n})\r\n\r\nexport class AddRecipeCuisine implements OnInit {\r\n\r\n    constructor(private data: DataService) { }\r\n\r\n    public cuisines: Cuisine[];\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadCuisines()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.cuisines = this.data.cuisines;\r\n                }\r\n            })\r\n    }\r\n\r\n    addCuisine(cuisine: Cuisine) {\r\n        this.data.CuisineAddToRecipe(cuisine);\r\n    }\r\n\r\n    removeCuisine(cuisine: Cuisine) {\r\n        this.data.CuisineRemoveFromRecipe(cuisine);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/recipe/addRecipeCuisine.component.ts","module.exports = \"<h6>Ingredient:</h6>\\r\\n\\r\\n<div class=\\\"input-group mb-3\\\" *ngFor=\\\"let r of data.recipe.ingredients\\\">\\r\\n    <input type=\\\"text\\\" readonly class=\\\"form-control\\\" id=\\\"recipeIngredients\\\" value=\\\"{{ r.quantity }} - {{ r.measurementMeasurement }} - {{ r.ingredientName }} - {{ r.preparationPreparation }}\\\" />\\r\\n    <div class=\\\"input-group-append\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"removeIngredient(r)\\\">Remove Ingredient</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-row\\\">\\r\\n    <div class=\\\"form-group col-md-2\\\">\\r\\n        <label for=\\\"recipeIngredientQuantityInput\\\">Quantity</label>\\r\\n        <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" [(ngModel)] =\\\"recipeIngredientQuantityInput\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-2\\\">\\r\\n        <label for=\\\"recipeIngredientMeasurementInput\\\">Measurement</label>\\r\\n        <select [(ngModel)]=\\\"recipeIngredientMeasurementInput\\\" class=\\\"form-control\\\" placeholder=\\\"Choose...\\\">\\r\\n            <option *ngFor=\\\"let m of ingredientMeasurements\\\" [ngValue]=\\\"m\\\">{{ m.ingredientMeasurement }}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-4\\\">\\r\\n        <label for=\\\"recipeIngredientInput\\\">Ingredient</label>\\r\\n        <select [(ngModel)]=\\\"recipeIngredientInput\\\" class=\\\"form-control\\\" placeholder=\\\"Choose...\\\">\\r\\n            <option *ngFor=\\\"let i of ingredients\\\" [ngValue]=\\\"i\\\">{{ i.ingredientName }}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-4\\\">\\r\\n        <label for=\\\"recipeIngredientPreparationInput\\\">Preparation</label>\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <select [(ngModel)]=\\\"recipeIngredientPreparationInput\\\" class=\\\"custom-select\\\" placeholder=\\\"Choose...\\\">\\r\\n                <option *ngFor=\\\"let p of ingredientPreparations\\\" [ngValue]=\\\"p\\\">{{ p.ingredientPreparation }}</option>\\r\\n            </select>\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"addIngredient(recipeIngredientQuantityInput, recipeIngredientMeasurementInput, recipeIngredientInput, recipeIngredientPreparationInput); recipeIngredientQuantityInput = Null; recipeIngredientMeasurementInput = Null; recipeIngredientInput = Null; recipeIngredientPreparationInput = Null\\\">Add Ingredient</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/recipe/addRecipeIngredient.component.html\n// module id = ./ClientApp/app/recipe/addRecipeIngredient.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../shared/dataService';\r\nimport { Ingredient } from '../shared/ingredient';\r\nimport { IngredientMeasurement } from '../shared/ingredientmeasurement';\r\nimport { IngredientPreparation } from '../shared/ingredientpreparation';\r\nimport { RecipeIngredient } from '../shared/recipe';\r\n\r\n\r\n@Component({\r\n    selector: 'recipe-ingredient',\r\n    templateUrl: 'addRecipeIngredient.component.html',\r\n    styleUrls: []\r\n})\r\n\r\nexport class AddRecipeIngredient implements OnInit{\r\n\r\n    constructor(private data: DataService) { }\r\n\r\n    public ingredients: Ingredient[];\r\n\r\n    public ingredientMeasurements: IngredientMeasurement[];\r\n\r\n    public ingredientPreparations: IngredientPreparation[];\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadIngredients()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.ingredients = this.data.ingredients;\r\n                }\r\n            })\r\n\r\n        this.data.loadIngredientMeasurements()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.ingredientMeasurements = this.data.ingredientMeasurements;\r\n                }\r\n            })\r\n\r\n        this.data.loadIngredientPreparations()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.ingredientPreparations = this.data.ingredientPreparations;\r\n                }\r\n            })\r\n    }\r\n\r\n    addIngredient(quantity, measurement: IngredientMeasurement, ingredient: Ingredient, preparation: IngredientPreparation) {\r\n        this.data.IngredientAddToRecipe(quantity, measurement, ingredient, preparation);\r\n    }\r\n\r\n    removeIngredient(ingredient: RecipeIngredient) {\r\n        this.data.IngredientRemoveFromRecipe(ingredient);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/recipe/addRecipeIngredient.component.ts","module.exports = \"<h6>Method:</h6>\\r\\n\\r\\n<div class=\\\"input-group mb-3\\\" *ngFor=\\\"let r of data.recipe.methods\\\">\\r\\n    <input type=\\\"text\\\" readonly class=\\\"form-control\\\" id=\\\"recipeMethods\\\" value=\\\"{{ r.stepNumber }}. {{ r.method }}\\\" />\\r\\n    <div class=\\\"input-group-append\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"removeMethod(r)\\\">Remove Method</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"input-group\\\">\\r\\n    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"recipeMethodInput\\\" rows=\\\"3\\\"></textarea>\\r\\n    <div class=\\\"input-group-append\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"addMethod(recipeMethodInput); recipeMethodInput = Null\\\">Add Method</button>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/recipe/addRecipeMethod.component.html\n// module id = ./ClientApp/app/recipe/addRecipeMethod.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { DataService } from '../shared/dataService';\r\nimport { RecipeMethod } from '../shared/recipe';\r\n\r\n@Component({\r\n    selector: 'recipe-method',\r\n    templateUrl: 'addRecipeMethod.component.html',\r\n    styleUrls: []\r\n})\r\n\r\nexport class AddRecipeMethod {\r\n\r\n    constructor(private data: DataService) { }\r\n\r\n    addMethod(method: RecipeMethod) {\r\n        this.data.MethodAddToRecipe(method);\r\n    }\r\n\r\n    removeMethod(method: RecipeMethod) {\r\n        this.data.MethodRemoveFromRecipe(method);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/recipe/addRecipeMethod.component.ts","module.exports = \"<h6>Note:</h6>\\r\\n<div class=\\\"input-group mb-3\\\" *ngFor=\\\"let r of data.recipe.notes\\\">\\r\\n    <input type=\\\"text\\\" readonly class=\\\"form-control\\\" id=\\\"recipeNotes\\\" value=\\\"{{ r.note }}\\\" />\\r\\n    <div class=\\\"input-group-append\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"removeNote(r)\\\">Remove Note</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"input-group\\\">\\r\\n    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"recipeNoteInput\\\" rows=\\\"3\\\"></textarea>\\r\\n    <div class=\\\"input-group-append\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"addNote(recipeNoteInput); recipeNoteInput = Null\\\">Add Note</button>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/recipe/addRecipeNote.component.html\n// module id = ./ClientApp/app/recipe/addRecipeNote.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { DataService } from '../shared/dataService';\r\nimport { RecipeNote } from '../shared/recipe';\r\n\r\n@Component({\r\n    selector: 'recipe-note',\r\n    templateUrl: 'addRecipeNote.component.html',\r\n    styleUrls: []\r\n})\r\n\r\nexport class AddRecipeNote {\r\n\r\n    constructor(private data: DataService) { }\r\n\r\n    addNote(note: RecipeNote) {\r\n        this.data.NoteAddToRecipe(note);\r\n    }\r\n\r\n    removeNote(note: RecipeNote) {\r\n        this.data.NoteRemoveFromRecipe(note);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/recipe/addRecipeNote.component.ts","module.exports = \"<h6>Tag:</h6>\\r\\n\\r\\n<div class=\\\"input-group mb-3\\\" *ngFor=\\\"let r of data.recipe.tags\\\">\\r\\n    <input type=\\\"text\\\" readonly class=\\\"form-control\\\" id=\\\"recipeTags\\\" value=\\\"{{ r.tagId }} - {{ r.tagName }}\\\" />\\r\\n    <div class=\\\"input-group-append\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"removeTag(r)\\\">Remove Tag</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"input-group\\\">\\r\\n    <select class=\\\"custom-select\\\" [(ngModel)]=\\\"recipeTagInput\\\" placeholder=\\\"Choose...\\\">\\r\\n        <option *ngFor=\\\"let t of tags\\\" [ngValue]=\\\"t\\\">{{ t.tagName }}</option>\\r\\n    </select>\\r\\n    <div class=\\\"input-group-append\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"addTag(recipeTagInput);recipeTagInput = Null\\\">Add Tag</button>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/recipe/addRecipeTag.component.html\n// module id = ./ClientApp/app/recipe/addRecipeTag.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../shared/dataService';\r\nimport { Tag } from '../shared/tag';\r\n\r\n@Component({\r\n    selector: 'recipe-tag',\r\n    templateUrl: 'addRecipeTag.component.html',\r\n    styleUrls: []\r\n})\r\n\r\nexport class AddRecipeTag implements OnInit {\r\n\r\n    constructor(private data: DataService) { }\r\n\r\n    public tags: Tag[];\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadTags()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.tags = this.data.tags;\r\n                }\r\n            })\r\n    }\r\n\r\n    addTag(tag: Tag) {\r\n        this.data.TagAddToRecipe(tag);\r\n    }\r\n\r\n    removeTag(tag: Tag) {\r\n        this.data.TagRemoveFromRecipe(tag);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/recipe/addRecipeTag.component.ts","module.exports = \"<h1>Recipe Creation</h1>\\r\\n\\r\\n    <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\"> {{ errorMessage }}</div>\\r\\n    <div id=\\\"recipe-info\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\" id=\\\"headingInfo\\\">\\r\\n                <h5 class=\\\"mb-0\\\">\\r\\n                    <button class=\\\"btn btn-block btn-dark\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseInfo\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseInfo\\\" style=\\\"white-space: normal\\\">\\r\\n                        General Info:\\r\\n                    </button>\\r\\n                </h5>\\r\\n            </div>\\r\\n\\r\\n            <div id=\\\"collapseInfo\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"collapseInfo\\\" data-parent=\\\"#recipe-info\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <form id=\\\"basicInfo\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col col-md-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipeImageInput\\\">Recipe Image</label>\\r\\n                                    <input type=\\\"file\\\" class=\\\"form-control-file\\\" name=\\\"recipeImageInput\\\" [(ngModel)]=\\\"recipeImageInput\\\" #image=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col col-md-8\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipeTitleInput\\\">Recipe Title</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"recipeTitleInput\\\" required minlength=\\\"4\\\" [(ngModel)]=\\\"recipeTitleInput\\\" #title=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"title.errors.required\\\">\\r\\n                                        Title is required.\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"title.errors.minlength\\\">\\r\\n                                        Title must be at least 4 characters long.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n\\r\\n                    <form id=\\\"generalInfo\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipePortionInput\\\">Number of portions</label>\\r\\n                                    <input type=\\\"number\\\" min=\\\"1\\\" class=\\\"form-control\\\" name=\\\"recipePortionInput\\\" required [(ngModel)]=\\\"recipePortionInput\\\" #portion=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"portion.invalid && (portion.dirty || portion.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    Portion is required.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipeSkillInput\\\">Skill</label>\\r\\n                                    <select name=\\\"recipeSkillInput\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"recipeSkillInput\\\" #skill=\\\"ngModel\\\" placeholder=\\\"Choose...\\\">\\r\\n                                        <option *ngFor=\\\"let s of skills\\\">{{ s.skill }}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"!skill.dirty\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    A skill level needs to be chosen.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipePrepTimeInput\\\">Prep time</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"recipePrepTimeInput\\\" minlength=\\\"3\\\" [(ngModel)]=\\\"recipePrepTimeInput\\\" #preptime=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"preptime.invalid && (preptime.dirty || preptime.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"preptime.errors.minlength\\\">\\r\\n                                        Prep time must be at least 3 characters long.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipeCategoryInput\\\">Category</label>\\r\\n                                    <select name=\\\"recipeCategoryInput\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"recipeCategoryInput\\\" #category=\\\"ngModel\\\" placeholder=\\\"Choose...\\\">\\r\\n                                        <option *ngFor=\\\"let ca of categories\\\">{{ ca.categoryName }}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"!category.dirty\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    A category needs to be chosen.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipeCookTimeInput\\\">Cook time</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"recipeCookTimeInput\\\" minlength=\\\"3\\\" [(ngModel)]=\\\"recipeCookTimeInput\\\" #cooktime=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"cooktime.invalid && (cooktime.dirty || cooktime.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"cooktime.errors.minlength\\\">\\r\\n                                        Cook time must be at least 3 characters long.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipeCourseInput\\\">Course</label>\\r\\n                                    <select name=\\\"recipeCourseInput\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"recipeCourseInput\\\" #course=\\\"ngModel\\\" placeholder=\\\"Choose...\\\">\\r\\n                                        <option *ngFor=\\\"let co of courses\\\">{{ co.courseName }}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"!course.dirty\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    A course needs to be chosen.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipeRatingInput\\\">Rating</label>\\r\\n                                    <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"5\\\" class=\\\"form-control\\\" name=\\\"recipeRatingInput\\\" [(ngModel)]=\\\"recipeRatingInput\\\" #rating=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <recipe-cuisine></recipe-cuisine>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <recipe-tag></recipe-tag>\\r\\n                            </div>\\r\\n                            <div class=\\\"col\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"recipe-nutrition\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\" id=\\\"headingNutrition\\\">\\r\\n                <h5 class=\\\"mb-0\\\">\\r\\n                    <button class=\\\"btn btn-block btn-dark\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseNutrition\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseNutrition\\\" style=\\\"white-space: normal\\\">\\r\\n                        Nutritional Info (per portion):\\r\\n                    </button>\\r\\n                </h5>\\r\\n            </div>\\r\\n\\r\\n            <div id=\\\"collapseNutrition\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"collapseNutrition\\\" data-parent=\\\"#recipe-nutrition\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <form id=\\\"nutritionalInfo\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipeCalorieInput\\\">Calories (kcal)</label>\\r\\n                                    <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"recipeCalorieInput\\\" [(ngModel)]=\\\"recipeCalorieInput\\\" #calorie=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipeProteinInput\\\">Protein (g)</label>\\r\\n                                    <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"recipeProteinInput\\\" [(ngModel)]=\\\"recipeProteinInput\\\" #protein=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipeCarbohydrateInput\\\">Carbohydrates (g)</label>\\r\\n                                    <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"recipeCarbohydrateInput\\\" [(ngModel)]=\\\"recipeCarbohydrateInput\\\" #carb=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipeFatInput\\\">Fat (g)</label>\\r\\n                                    <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"recipeFatInput\\\" [(ngModel)]=\\\"recipeFatInput\\\" #fat=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipeSaturatedFatInput\\\">Saturated Fat (g)</label>\\r\\n                                    <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"recipeSaturatedFatInput\\\" [(ngModel)]=\\\"recipeSaturatedFatInput\\\" #satfat=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipeFibreInput\\\">Fibre (g)</label>\\r\\n                                    <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"recipeFibreInput\\\" [(ngModel)]=\\\"recipeFibreInput\\\" #fibre=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipeSugarInput\\\">Sugar (g)</label>\\r\\n                                    <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"recipeSugarInput\\\" [(ngModel)]=\\\"recipeSugarInput\\\" #sugar=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"recipeSaltInput\\\">Salt (g)</label>\\r\\n                                    <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"recipeSaltInput\\\" [(ngModel)]=\\\"recipeSaltInput\\\" #salt=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"recipe-ingredients\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\" id=\\\"headingIngredients\\\">\\r\\n                <h5 class=\\\"mb-0\\\">\\r\\n                    <button class=\\\"btn btn-block btn-dark\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseIngredients\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseIngredients\\\" style=\\\"white-space: normal\\\">\\r\\n                        Ingredients:\\r\\n                    </button>\\r\\n                </h5>\\r\\n            </div>\\r\\n\\r\\n            <div id=\\\"collapseIngredients\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"collapseIngredients\\\" data-parent=\\\"#recipe-ingredients\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <form id=\\\"ingredientInfo\\\">\\r\\n                        <recipe-ingredient></recipe-ingredient>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"recipe-method\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\" id=\\\"headingMethod\\\">\\r\\n                <h5 class=\\\"mb-0\\\">\\r\\n                    <button class=\\\"btn btn-block btn-dark\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseMethod\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseMethod\\\" style=\\\"white-space: normal\\\">\\r\\n                        Method:\\r\\n                    </button>\\r\\n                </h5>\\r\\n            </div>\\r\\n\\r\\n            <div id=\\\"collapseMethod\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"collapseMethod\\\" data-parent=\\\"#recipe-method\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <form id=\\\"methodInfo\\\">\\r\\n                        <recipe-method></recipe-method>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"recipe-notes\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\" id=\\\"headingNotes\\\">\\r\\n                <h5 class=\\\"mb-0\\\">\\r\\n                    <button class=\\\"btn btn-block btn-dark\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseNotes\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseNotes\\\" style=\\\"white-space: normal\\\">\\r\\n                        Notes:\\r\\n                    </button>\\r\\n                </h5>\\r\\n            </div>\\r\\n\\r\\n            <div id=\\\"collapseNotes\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"collapseNotes\\\" data-parent=\\\"#recipe-notes\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <form id=\\\"noteInfo\\\">\\r\\n                        <recipe-note></recipe-note>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onCreateRecipe(recipeImageInput, recipeTitleInput, recipePortionInput, recipeSkillInput, recipePrepTimeInput, recipeCategoryInput, recipeCookTimeInput, recipeCourseInput, recipeRatingInput, recipeCalorieInput, recipeProteinInput, recipeCarbohydrateInput, recipeFatInput, recipeSaturatedFatInput, recipeFibreInput, recipeSugarInput, recipeSaltInput)\\\">Create Recipe</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/recipe/createRecipe.component.html\n// module id = ./ClientApp/app/recipe/createRecipe.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../shared/dataService';\r\nimport { Category } from '../shared/category';\r\nimport { Course } from '../shared/course';\r\nimport { Skill } from '../shared/skill';\r\nimport { Tag } from '../shared/tag';\r\nimport { AddRecipeCuisine } from '../recipe/addRecipeCuisine.component';\r\nimport { AddRecipeTag } from '../recipe/addRecipeTag.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'create-recipe',\r\n    templateUrl: 'createRecipe.component.html',\r\n    styleUrls: []\r\n})\r\n\r\nexport class CreateRecipe implements OnInit {\r\n\r\n    constructor(private data: DataService/*, public router: Router*/) { }\r\n\r\n    public categories: Category[];\r\n\r\n    public courses: Course[];\r\n\r\n    public skills: Skill[];\r\n\r\n    errorMessage: string = \"\";\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadCategories()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.categories = this.data.categories;\r\n                }\r\n            })\r\n\r\n        this.data.loadCourses()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.courses = this.data.courses;\r\n                }\r\n            })\r\n\r\n        this.data.loadSkills()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.skills = this.data.skills;\r\n                }\r\n            })\r\n    }\r\n\r\n    onCreateRecipe(image, title, portion, skill, preptime, category, cooktime, course, rating, calorie, protein, carb, fat, satfat, fibre, sugar, salt, location) {\r\n\r\n        this.data.CreateRecipe(image, title, portion, skill, preptime, category, cooktime, course, rating, calorie, protein, carb, fat, satfat, fibre, sugar, salt, location)\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    //TODO Routing\r\n                    //this.router.navigate(['/']);\r\n                }\r\n            }, err => this.errorMessage = \"Failed to save recipe\");\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/recipe/createRecipe.component.ts","import { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Category } from '../shared/category';\r\nimport { Course } from '../shared/course';\r\nimport { Cuisine } from '../shared/cuisine';\r\nimport { Ingredient } from '../shared/ingredient';\r\nimport { IngredientMeasurement } from '../shared/ingredientmeasurement';\r\nimport { IngredientPreparation } from '../shared/ingredientpreparation';\r\nimport { Skill } from '../shared/skill';\r\nimport { Tag } from '../shared/tag';\r\nimport { Recipe, RecipeCuisine, RecipeTag, RecipeNote, RecipeMethod, RecipeIngredient } from '../shared/recipe';\r\nimport 'rxjs/add/operator/map';\r\nimport * as _ from 'lodash';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public categories: Category[] = [];\r\n\r\n    public courses: Course[] = [];\r\n\r\n    public cuisines: Cuisine[] = [];\r\n\r\n    public ingredients: Ingredient[] = [];\r\n\r\n    public ingredientMeasurements: IngredientMeasurement[] = [];\r\n\r\n    public ingredientPreparations: IngredientPreparation[] = [];\r\n\r\n    public skills: Skill[] = [];\r\n\r\n    public tags: Tag[] = [];\r\n\r\n    public recipe: Recipe = new Recipe();\r\n\r\n    public loadCategories(): Observable<boolean> {\r\n        return this.http.get('/api/category')\r\n            .map((data: any[]) => {\r\n                this.categories = data;\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public loadCourses(): Observable<boolean> {\r\n        return this.http.get('/api/course')\r\n            .map((data: any[]) => {\r\n                this.courses = data;\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public loadCuisines(): Observable<boolean> {\r\n        return this.http.get('/api/cuisine')\r\n            .map((data: any[]) => {\r\n                this.cuisines = data;\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public loadIngredients(): Observable<boolean> {\r\n        return this.http.get('/api/ingredient')\r\n            .map((data: any[]) => {\r\n                this.ingredients = data;\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public loadIngredientMeasurements(): Observable<boolean> {\r\n        return this.http.get('/api/ingredientMeasurement')\r\n            .map((data: any[]) => {\r\n                this.ingredientMeasurements = data;\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public loadIngredientPreparations(): Observable<boolean> {\r\n        return this.http.get('/api/ingredientPreparation')\r\n            .map((data: any[]) => {\r\n                this.ingredientPreparations = data;\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public loadSkills(): Observable<boolean> {\r\n        return this.http.get('/api/skill')\r\n            .map((data: any[]) => {\r\n                this.skills = data;\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public loadTags(): Observable<boolean> {\r\n        return this.http.get('/api/tag')\r\n            .map((data: any[]) => {\r\n                this.tags = data;\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public CuisineAddToRecipe(cuisine: Cuisine) {\r\n\r\n        if (this.recipe.cuisine.findIndex(c => c.cuisineName === cuisine.cuisineName) == -1) {\r\n\r\n            let rcuisine: RecipeCuisine;\r\n\r\n            rcuisine = new RecipeCuisine();\r\n            rcuisine.cuisineId = cuisine.cuisineId;\r\n            rcuisine.cuisineName = cuisine.cuisineName;\r\n\r\n            this.recipe.cuisine.push(rcuisine);\r\n        }\r\n    }\r\n\r\n    public CuisineRemoveFromRecipe(cuisine: Cuisine) {\r\n        const index: number = this.recipe.cuisine.indexOf(cuisine);\r\n\r\n        if (index !== -1) {\r\n            this.recipe.cuisine.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public TagAddToRecipe(tag: Tag) {\r\n\r\n        if (this.recipe.tags.findIndex(t => t.tagName === tag.tagName) == -1) {\r\n\r\n            let rtag: RecipeTag;\r\n\r\n            rtag = new RecipeTag();\r\n            rtag.tagId = tag.tagId;\r\n            rtag.tagName = tag.tagName;\r\n\r\n            this.recipe.tags.push(rtag);\r\n        }\r\n    }\r\n\r\n    public TagRemoveFromRecipe(tag: Tag) {\r\n        const index: number = this.recipe.tags.indexOf(tag);\r\n\r\n        if (index !== -1) {\r\n            this.recipe.tags.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public NoteAddToRecipe(note) {\r\n\r\n        if (this.recipe.notes.findIndex(n => n.note === note) == -1) {\r\n\r\n            let rnote: RecipeNote;\r\n\r\n            rnote = new RecipeNote();\r\n            rnote.note = note;\r\n\r\n            this.recipe.notes.push(rnote);\r\n        }\r\n    }\r\n\r\n    public NoteRemoveFromRecipe(note: RecipeNote) {\r\n        const index: number = this.recipe.notes.indexOf(note);\r\n\r\n        if (index !== -1) {\r\n            this.recipe.notes.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public MethodAddToRecipe(method) {\r\n\r\n        if (this.recipe.methods.findIndex(m => m.method === method) == -1) {\r\n\r\n            let rmethod: RecipeMethod;\r\n\r\n            rmethod = new RecipeMethod();\r\n            rmethod.stepNumber = this.recipe.methods.length + 1;\r\n            rmethod.method = method;\r\n\r\n            this.recipe.methods.push(rmethod);\r\n        }\r\n    }\r\n\r\n    public MethodRemoveFromRecipe(method: RecipeMethod) {\r\n        const index: number = this.recipe.methods.indexOf(method);\r\n\r\n        if (index !== -1) {\r\n            this.recipe.methods.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public IngredientAddToRecipe(quantity, measurement: IngredientMeasurement, ingredient: Ingredient, preparation: IngredientPreparation) {\r\n\r\n        const index: number = this.recipe.ingredients.findIndex(\r\n            function (i) {\r\n                return i.ingredientName === ingredient.ingredientName && i.measurementMeasurement === measurement.ingredientMeasurement && i.preparationPreparation === preparation.ingredientPreparation && i.quantity === quantity;\r\n            }\r\n        );\r\n\r\n        if (index == -1) {\r\n\r\n            let ringredient: RecipeIngredient;\r\n\r\n            ringredient = new RecipeIngredient();\r\n            ringredient.quantity = quantity;\r\n            ringredient.measurementId = measurement.ingredientMeasurementId;\r\n            ringredient.measurementMeasurement = measurement.ingredientMeasurement;\r\n            ringredient.ingredientId = ingredient.ingredientId;\r\n            ringredient.ingredientName = ingredient.ingredientName;\r\n            ringredient.preparationId = preparation.ingredientPreparationId;\r\n            ringredient.preparationPreparation = preparation.ingredientPreparation;\r\n\r\n            this.recipe.ingredients.push(ringredient);\r\n        }\r\n    }\r\n\r\n    public IngredientRemoveFromRecipe(ingredient: RecipeIngredient) {\r\n        const index: number = this.recipe.ingredients.indexOf(ingredient);\r\n\r\n        if (index !== -1) {\r\n            this.recipe.ingredients.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public CreateRecipe(image, title, portion, skill, preptime, category, cooktime, course, rating, calorie, protein, carb, fat, satfat, fibre, sugar, salt, location) {\r\n\r\n        this.recipe.recipeImage = image;\r\n        this.recipe.recipeName = title;\r\n        this.recipe.portions = portion;\r\n        this.recipe.skillSkillLevel = skill;\r\n        this.recipe.prepTime = preptime;\r\n        this.recipe.cookTime = cooktime;\r\n        this.recipe.categoryName = category;\r\n        this.recipe.courseName = course;\r\n        this.recipe.rating = rating;\r\n        this.recipe.calories = calorie;\r\n        this.recipe.protein = protein;\r\n        this.recipe.carbohydrates = carb;\r\n        this.recipe.fat = fat;\r\n        this.recipe.saturated = satfat;\r\n        this.recipe.fibre = fibre;\r\n        this.recipe.sugars = sugar;\r\n        this.recipe.salt = salt;\r\n\r\n        return this.http.post('/api/recipe', this.recipe)\r\n            .map(response => {\r\n                this.recipe = new Recipe();\r\n                return true;\r\n            });\r\n    }\r\n\r\n    public CreateBasicRecipe(image, title, portion, skill, preptime, category, cooktime, course, rating, calorie, protein, carb, fat, satfat, fibre, sugar, salt, location) {\r\n\r\n        this.recipe.recipeImage = image;\r\n        this.recipe.recipeName = title;\r\n        this.recipe.portions = portion;\r\n        this.recipe.skillSkillLevel = skill;\r\n        this.recipe.prepTime = preptime;\r\n        this.recipe.cookTime = cooktime;\r\n        this.recipe.categoryName = category;\r\n        this.recipe.courseName = course;\r\n        this.recipe.rating = rating;\r\n        this.recipe.calories = calorie;\r\n        this.recipe.protein = protein;\r\n        this.recipe.carbohydrates = carb;\r\n        this.recipe.fat = fat;\r\n        this.recipe.saturated = satfat;\r\n        this.recipe.fibre = fibre;\r\n        this.recipe.sugars = sugar;\r\n        this.recipe.salt = salt;\r\n        this.recipe.location = location;\r\n\r\n        return this.http.post('api/basicrecipe', this.recipe)\r\n            .map(response => {\r\n                this.recipe = new Recipe();\r\n                return true;\r\n            });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/shared/dataService.ts","export class Recipe {\r\n    recipeId: number;\r\n    recipeName: string;\r\n    recipeImage: string;\r\n    portions: number;\r\n    rating: number;\r\n    prepTime: string;\r\n    cookTime: string;\r\n    calories: number;\r\n    fat: number;\r\n    saturated: number;\r\n    carbohydrates: number;\r\n    sugars: number;\r\n    fibre: number;\r\n    protein: number;\r\n    salt: number;\r\n    location: string;\r\n    ingredients: Array<RecipeIngredient> = new Array<RecipeIngredient>();\r\n    methods: Array<RecipeMethod> = new Array <RecipeMethod>();\r\n    notes: Array<RecipeNote> = new Array <RecipeNote>();\r\n    cuisine: Array<RecipeCuisine> = new Array<RecipeCuisine>();\r\n    tags: Array<RecipeTag> = new Array<RecipeTag>();\r\n    skillId: number;\r\n    skillSkillLevel: string;\r\n    courseId: number;\r\n    courseName: string;\r\n    categoryId: number;\r\n    categoryName: string;\r\n}\r\n\r\nexport class RecipeIngredient {\r\n    quantity: number;\r\n    ingredientId: number;\r\n    ingredientName: string;\r\n    measurementId: number;\r\n    measurementMeasurement: string;\r\n    preparationId: number;\r\n    preparationPreparation: string;\r\n}\r\n\r\nexport class RecipeMethod {\r\n    stepNumber: number;\r\n    method: string;\r\n}\r\n\r\nexport class RecipeNote {\r\n    note: string;\r\n}\r\n\r\nexport class RecipeCuisine {\r\n    cuisineId: number;\r\n    cuisineName: string;\r\n}\r\n\r\nexport class RecipeTag {\r\n    tagId: number;\r\n    tagName: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/shared/recipe.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/main.ts"],"sourceRoot":"webpack:///"}